{
  "name": "com.unity.xr.arfoundation",
  "displayName": "AR Foundation",
  "version": "5.0.7",
  "unity": "2021.2",
  "description": "A collection of Subsystems as well as MonoBehaviours and C# utilities for working with the Subsystems. \n\nIncludes: \n▪ Definitions of Subsystems \n▪ GameObject menu items for creating an AR setup \n▪ MonoBehaviours that control AR session lifecycle and create GameObjects from detected, real-world trackable features \n▪ Scale handling \n▪ Face tracking\n\nSamples available at https://github.com/Unity-Technologies/arfoundation-samples",
  "keywords": [
    "xr",
    "ar",
    "augmented",
    "reality",
    "utility",
    "utilities",
    "foundation",
    "core",
    "subsystem",
    "xreditorsubsystem",
    "arsimulation"
  ],
  "dependencies": {
    "com.unity.inputsystem": "1.3.0",
    "com.unity.xr.core-utils": "2.1.0",
    "com.unity.xr.management": "4.0.1",
    "com.unity.ugui": "1.0.0",
    "com.unity.mathematics": "1.2.5",
    "com.unity.modules.particlesystem": "1.0.0",
    "com.unity.modules.ui": "1.0.0",
    "com.unity.modules.unityanalytics": "1.0.0",
    "com.unity.modules.unitywebrequest": "1.0.0"
  },
  "_upm": {
    "changelog": "### Fixed\n\n- Fixed issue [ARFB-271](https://issuetracker.unity3d.com/issues/ar-simulation-error-on-arsession-dot-reset-simulationprovider-dot-createvoxelgrids) where `SimulationPlaneSubsystem` could throw a `NullReferenceException` when `ArSession.Reset` is called.\n- Fixed an issue in `SimulationMeshingProvider` where mesh data updates were not properly marked as no longer dirty. This caused the subsystem to unnecessarily update meshes every frame.\n- Fixed issue where `SimulationPlaneSubsystem` could throw a `NullReferenceException` when `XRPlaneSubsystem.GetChanges` is called.\n- Fixed issue [ARFB-176](https://issuetracker.unity3d.com/issues/ios-arenvironmentprobemanager-dot-ondestroy-triggers-application-crash) where destroying an `AREnvironmentProbe` prior to destroying the `AREnvironmentProbeManager` would cause a crash.\n- Fixed issue [ARFB-307](https://issuetracker.unity3d.com/issues/ios-arcamerabackground-retains-depth-texture-when-switching-to-a-scene-with-no-occlusion) where occlusion was persisting after the `AROcclusionManager` was disabled."
  },
  "upmCi": {
    "footprint": "1075804a5a8abce909271d4c17db7a543968ffc2"
  },
  "documentationUrl": "https://docs.unity3d.com/Packages/com.unity.xr.arfoundation@5.0/manual/index.html",
  "repository": {
    "url": "https://github.cds.internal.unity3d.com/unity/arfoundation.git",
    "type": "git",
    "revision": "2ed0403e7f5d44edc028e2251019fb47962bd8d7"
  }
}
